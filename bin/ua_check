#!/usr/bin/env ruby
require 'net/ssh'
require 'colored'
require 'netid-tools'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: ua_check [options]"


  opts.on("-c", "--concise", "Concise Results") do |c|
    options[:concise] = c
  end
  opts.on("-d", "--debug", "Run in debug (verbosely)") do |d|
    options[:debug] = d
  end
end.parse!

# This is a simple script that will go through various hosts and check to see
# if a specified user is running MySQLd
#
# It assumes the user running the script has ssh keys setup for authentication
#
# Requires net-ssh gem and ruby compiled with openssl. Pulls SSH user from
# system's `whoami` command.
#
# Required: Ruby 1.9.2+

## To-Do:
# * Consolidate SSH connect lines
# * Grab owners/administrators?


# Set up initial variables
$results = 0
raise "No NetID(s) specified. Bailing." if ARGV.empty?
user = ARGV.map{|n| n.downcase}
user.each do |netid|
  raise "#{netid} is not a valid NetID! Exiting." unless Netid.validate_netid?(netid)
end
# get the user of whoever is running script
system_user = `whoami`.chomp
system_hostname = `hostname`.chomp
# Initialize the systems we'll check
hosts = [ "ovid01.u.washington.edu",
  "ovid02.u.washington.edu",
  "ovid03.u.washington.edu",
  "vergil.u.washington.edu"
]

puts "Running UA Check for on behalf of #{system_user}\n".green

user.each do |netid|
  puts "#{netid}".bold.green
  puts "-"*netid.length
  results = 0
  hosts.each do |host|
    result = Netid.check_for_mysql_presence(host,netid,system_user)
    if result
      results += 1
      puts "MySQLd detected on #{result[0]}:#{result[1]}".blue
    end
  end

  result = Netid.check_for_localhome(netid,system_user)
  if result
    puts "Localhome: #{result}".cyan
  else
    puts "No localhome detected"
  end

  puts "Webtypes set: #{Netid.check_webtype(netid, system_user)}"

  puts "No MySQLds Detected".bold.blue if results == 0
#uts "Multiple MySQLds Detected!".bold.red if results > 1
#puts Netid.check_for_localhome(user,system_user).cyan if results > 0
unless options[:concise]
  puts "\n"
  Netid.quota_check(netid,system_user)
end
puts "\n"
end
